// Generated by LiveScript 1.2.0
var shuffle, isSorted, wait, sleepSort, shuffleSort, quantumShuffleSort, miracleSort, assumptionSort, demoSort;
shuffle = function(arr){
  var j, x, i;
  j = x = i = arr.length;
  while (i) {
    j = Math.floor(Math.random() * i);
    x = arr[--i];
    arr[i] = arr[j];
    arr[j] = x;
  }
  return arr;
};
isSorted = function(arr){
  var i$, to$, i;
  if (arr.length <= 1) {
    return true;
  }
  for (i$ = 0, to$ = arr.length - 1; i$ < to$; ++i$) {
    i = i$;
    if (arr[i] > arr[i + 1]) {
      return false;
    }
  }
  return true;
};
wait = function(){};
sleepSort = function(arr){
  return arr.forEach(function(num){
    return setTimeout(function(){
      return console.log(num);
    }, num);
  });
};
shuffleSort = function(arr){
  while (!isSorted(arr)) {
    shuffle(arr);
  }
  return arr;
};
quantumShuffleSort = function(arr){
  shuffle(arr);
  if (!isSorted(arr)) {}
  return arr;
};
miracleSort = function(arr){
  while (!isSorted(arr)) {
    wait();
  }
  return arr;
};
assumptionSort = function(arr){
  return arr;
};
demoSort = function(arr){
  return [1, 3, 4, 5, 5, 5, 6, 25, 27, 33, 83];
};
sleepSort([5, 3, 1, 4, 6, 5, 83, 25, 27, 5, 33]);
console.log(shuffleSort([5, 3, 1, 4, 6, 5, 83, 25, 27, 5, 33]));
console.log(demoSort([5, 3, 1, 4, 6, 5, 83, 25, 27, 5, 33]));